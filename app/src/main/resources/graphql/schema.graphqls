schema {
    query: Query
}

type Person {
    id: ID!,
    name: String,
    age: Int,
    gender: Gender
    schedules: [Schedule]
}

enum Gender {
    MALE, FEMALE
}

type Barber {
    id: ID!,
    name: String,
    schedules: [Schedule]
}

type Schedule {
    id: ID!,
    date: String,
    barber: Barber,
    costumer: Person,
}

input PersonInput {
    name: String,
    age: Int,
    gender: Gender
}

input BarberInput {
    name: String
}

input ScheduleInput {
    date: String,
    costumerId: Int,
    barberId: Int
}

type Query {
    findAllPeople: [Person]
    findPersonById(id: Int): Person

    findAllBarbers: [Barber]

    findAllSchedules: [Schedule]
}

type Mutation {
    savePerson(person: PersonInput): Person
    updateAge(id: Int, age: Int): Person

    saveBarber(barber: BarberInput): Barber

    saveSchedule(schedule: ScheduleInput): Schedule
}